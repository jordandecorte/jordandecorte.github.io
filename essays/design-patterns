---
layout: essay
type: essay
title: "Design Patterns: Reduce! Reuse! Recycle!"
# All dates must be YYYY-MM-DD format!
date: 2025-07-24
published: true
labels:
  - Design Patterns
  - Coding

---

## What are Design Patterns? Are they important?

In Software Engineering, design patterns are generally understood as reusable solutions for typical software design challenges. Seasoned software engineers use these best practices to write more structured, manageable, and scalable code. Design patterns are not finished code but templates or blueprints only. Design patterns are extremely important because it makes coding from scratch much, much easier. In todays coding world, there are many repetitive scenarios that have already been worked through previously. So, having these design patterns save software engineers a whole lot of time by allowing them to follow pre-made templates that are proven to work, without having to stress about coding from the ground up. This allows software engineers to focus their time and energy to solving other important issues concerning the task at hand. 

## (RRR) of Design Patterns: 

Reduce: Reducing the amount of time that's traditionally needed to code from the ground up by using design patterns.
Reuse: Reusing previously written and efficient code is done using design patterns.
Recycle: Recycling old templates allows software engineers to have properly structured code.

## My experience with Design Patterns

My first interaction with Design Patterns came unknowingly and unwillingly to say the least. While working on coding different websites, the requirement was that we utilize Nextjs to complete all the different websites. Provided was a Nextjs template that we downloaded to our local repository that already had a working and running site. All we needed to do was change the different specifications, images, wording etc... in order to create the different websites we wanted. It would be a nightmare if we had to code the working site from scratch. This made life so much easier. Without even knowing it I was actively interacting with design patterns.

## Conclusion

In conclusion, design patterns are extremely helpful for any coding project you might have. Here's an analogy of how I understand design patterns: Growing up, I loved playing video games when I was allowed to. I enjoyed playing the GTA series, especially GTA: Vice City. It was always a challenege to make enough money in the game to buy things such as cars, guns, outfits etc... One day, I learned of cheat codes. These cheat codes would instantly give me the thing I desired at the time. Whether it was cars, planes, tanks etc... I would write these cheat codes, which are sequences of buttons, down on a sheet and would refer to them whenever I wanted a certain thing in the game. An index of cheat codes. This cut out all the repetitive work that I needed to do when I wanted something that I had already. And this is how I view design patterns. Cheat codes or shortcuts to getting what you want without all the unnecessary time.

## AI Usage

AI was not used for this essay. Thoughts and words were done entirely by myself.
